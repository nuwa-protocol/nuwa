
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTnonassocEQNELTLEGTGEAND ASSIGN BOOLEAN CALC CALL COLON COMMA DO DOT ELSE END EQ FOR GE GT ID IF IN LBRACE LE LET LPAREN LT NE NOT NOW NUMBER OR PRINT RBRACE RPAREN STRING THENscript : statementsstatements : statements statement\n                  | statementstatement : let_statement\n                 | call_statement\n                 | if_statement\n                 | for_statement\n                 | function_calllet_statement : LET ID ASSIGN expressioncall_statement : CALL ID LBRACE arguments RBRACEif_statement : IF expression THEN statements END\n                    | IF expression THEN statements ELSE statements ENDfor_statement : FOR ID IN expression DO statements ENDarguments : argument_list\n                 | emptyargument_list : argument_list COMMA argument\n                     | argumentargument : ID COLON expressionempty :expression : binary_op\n                  | unary_op\n                  | function_call\n                  | call_expression\n                  | calc_expression\n                  | literal\n                  | variable\n                  | LPAREN expression RPARENbinary_op : expression EQ expression\n                 | expression NE expression\n                 | expression LT expression\n                 | expression LE expression\n                 | expression GT expression\n                 | expression GE expression\n                 | expression AND expression\n                 | expression OR expression\n                 | expression DOT ID unary_op : NOT expressionfunction_call : NOW LPAREN RPAREN\n                     | PRINT LPAREN expression RPARENcall_expression : CALL ID LBRACE arguments RBRACEcalc_expression : CALC LBRACE calc_args RBRACEcalc_args : ID COLON STRING COMMA ID COLON LBRACE arguments RBRACEliteral : NUMBER\n               | STRING\n               | BOOLEANvariable : ID'
    
_lr_action_items = {'LET':([0,2,3,4,5,6,7,8,15,19,20,21,22,23,24,25,27,31,32,33,39,50,54,56,62,63,64,65,66,67,68,69,70,71,72,77,79,81,82,84,86,89,90,92,93,95,],[9,9,-3,-4,-5,-6,-7,-8,-2,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,9,-37,-38,-9,9,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,-39,-10,-11,9,-41,9,9,-40,9,-12,-13,]),'CALL':([0,2,3,4,5,6,7,8,11,15,19,20,21,22,23,24,25,26,27,28,31,32,33,36,37,39,40,41,42,43,44,45,46,47,50,53,54,56,62,63,64,65,66,67,68,69,70,71,72,77,78,79,81,82,84,86,89,90,92,93,95,],[10,10,-3,-4,-5,-6,-7,-8,29,-2,-20,-21,-22,-23,-24,-25,-26,29,-46,29,-43,-44,-45,29,29,10,29,29,29,29,29,29,29,29,-37,29,-38,-9,10,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,-39,29,-10,-11,10,-41,10,10,-40,10,-12,-13,]),'IF':([0,2,3,4,5,6,7,8,15,19,20,21,22,23,24,25,27,31,32,33,39,50,54,56,62,63,64,65,66,67,68,69,70,71,72,77,79,81,82,84,86,89,90,92,93,95,],[11,11,-3,-4,-5,-6,-7,-8,-2,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,11,-37,-38,-9,11,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,-39,-10,-11,11,-41,11,11,-40,11,-12,-13,]),'FOR':([0,2,3,4,5,6,7,8,15,19,20,21,22,23,24,25,27,31,32,33,39,50,54,56,62,63,64,65,66,67,68,69,70,71,72,77,79,81,82,84,86,89,90,92,93,95,],[12,12,-3,-4,-5,-6,-7,-8,-2,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,12,-37,-38,-9,12,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,-39,-10,-11,12,-41,12,12,-40,12,-12,-13,]),'NOW':([0,2,3,4,5,6,7,8,11,15,19,20,21,22,23,24,25,26,27,28,31,32,33,36,37,39,40,41,42,43,44,45,46,47,50,53,54,56,62,63,64,65,66,67,68,69,70,71,72,77,78,79,81,82,84,86,89,90,92,93,95,],[13,13,-3,-4,-5,-6,-7,-8,13,-2,-20,-21,-22,-23,-24,-25,-26,13,-46,13,-43,-44,-45,13,13,13,13,13,13,13,13,13,13,13,-37,13,-38,-9,13,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,-39,13,-10,-11,13,-41,13,13,-40,13,-12,-13,]),'PRINT':([0,2,3,4,5,6,7,8,11,15,19,20,21,22,23,24,25,26,27,28,31,32,33,36,37,39,40,41,42,43,44,45,46,47,50,53,54,56,62,63,64,65,66,67,68,69,70,71,72,77,78,79,81,82,84,86,89,90,92,93,95,],[14,14,-3,-4,-5,-6,-7,-8,14,-2,-20,-21,-22,-23,-24,-25,-26,14,-46,14,-43,-44,-45,14,14,14,14,14,14,14,14,14,14,14,-37,14,-38,-9,14,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,-39,14,-10,-11,14,-41,14,14,-40,14,-12,-13,]),'$end':([1,2,3,4,5,6,7,8,15,19,20,21,22,23,24,25,27,31,32,33,50,54,56,63,64,65,66,67,68,69,70,71,72,77,79,81,84,90,93,95,],[0,-1,-3,-4,-5,-6,-7,-8,-2,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,-37,-38,-9,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,-39,-10,-11,-41,-40,-12,-13,]),'END':([3,4,5,6,7,8,15,19,20,21,22,23,24,25,27,31,32,33,50,54,56,62,63,64,65,66,67,68,69,70,71,72,77,79,81,84,89,90,92,93,95,],[-3,-4,-5,-6,-7,-8,-2,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,-37,-38,-9,81,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,-39,-10,-11,-41,93,-40,95,-12,-13,]),'ELSE':([3,4,5,6,7,8,15,19,20,21,22,23,24,25,27,31,32,33,50,54,56,62,63,64,65,66,67,68,69,70,71,72,77,79,81,84,90,93,95,],[-3,-4,-5,-6,-7,-8,-2,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,-37,-38,-9,82,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,-39,-10,-11,-41,-40,-12,-13,]),'ID':([9,10,11,12,26,28,29,36,37,38,40,41,42,43,44,45,46,47,48,52,53,73,78,80,94,98,],[16,17,27,34,27,27,51,27,27,57,27,27,27,27,27,27,27,27,71,75,27,57,27,57,96,57,]),'LPAREN':([11,13,14,26,28,36,37,40,41,42,43,44,45,46,47,53,78,],[26,35,36,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'NOT':([11,26,28,36,37,40,41,42,43,44,45,46,47,53,78,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'CALC':([11,26,28,36,37,40,41,42,43,44,45,46,47,53,78,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'NUMBER':([11,26,28,36,37,40,41,42,43,44,45,46,47,53,78,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'STRING':([11,26,28,36,37,40,41,42,43,44,45,46,47,53,78,85,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,]),'BOOLEAN':([11,26,28,36,37,40,41,42,43,44,45,46,47,53,78,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'ASSIGN':([16,],[37,]),'LBRACE':([17,30,51,97,],[38,52,73,98,]),'THEN':([18,19,20,21,22,23,24,25,27,31,32,33,50,54,63,64,65,66,67,68,69,70,71,72,77,84,90,],[39,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,-37,-38,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,-39,-41,-40,]),'EQ':([18,19,20,21,22,23,24,25,27,31,32,33,49,50,54,55,56,63,64,65,66,67,68,69,70,71,72,76,77,84,87,90,],[40,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,40,40,-38,40,40,None,None,None,None,None,None,40,40,-36,-27,40,-39,-41,40,-40,]),'NE':([18,19,20,21,22,23,24,25,27,31,32,33,49,50,54,55,56,63,64,65,66,67,68,69,70,71,72,76,77,84,87,90,],[41,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,41,41,-38,41,41,None,None,None,None,None,None,41,41,-36,-27,41,-39,-41,41,-40,]),'LT':([18,19,20,21,22,23,24,25,27,31,32,33,49,50,54,55,56,63,64,65,66,67,68,69,70,71,72,76,77,84,87,90,],[42,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,42,42,-38,42,42,None,None,None,None,None,None,42,42,-36,-27,42,-39,-41,42,-40,]),'LE':([18,19,20,21,22,23,24,25,27,31,32,33,49,50,54,55,56,63,64,65,66,67,68,69,70,71,72,76,77,84,87,90,],[43,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,43,43,-38,43,43,None,None,None,None,None,None,43,43,-36,-27,43,-39,-41,43,-40,]),'GT':([18,19,20,21,22,23,24,25,27,31,32,33,49,50,54,55,56,63,64,65,66,67,68,69,70,71,72,76,77,84,87,90,],[44,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,44,44,-38,44,44,None,None,None,None,None,None,44,44,-36,-27,44,-39,-41,44,-40,]),'GE':([18,19,20,21,22,23,24,25,27,31,32,33,49,50,54,55,56,63,64,65,66,67,68,69,70,71,72,76,77,84,87,90,],[45,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,45,45,-38,45,45,None,None,None,None,None,None,45,45,-36,-27,45,-39,-41,45,-40,]),'AND':([18,19,20,21,22,23,24,25,27,31,32,33,49,50,54,55,56,63,64,65,66,67,68,69,70,71,72,76,77,84,87,90,],[46,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,46,-37,-38,46,46,-28,-29,-30,-31,-32,-33,-34,46,-36,-27,46,-39,-41,46,-40,]),'OR':([18,19,20,21,22,23,24,25,27,31,32,33,49,50,54,55,56,63,64,65,66,67,68,69,70,71,72,76,77,84,87,90,],[47,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,47,-37,-38,47,47,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,47,-39,-41,47,-40,]),'DOT':([18,19,20,21,22,23,24,25,27,31,32,33,49,50,54,55,56,63,64,65,66,67,68,69,70,71,72,76,77,84,87,90,],[48,-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,48,-37,-38,48,48,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,48,-39,-41,48,-40,]),'RPAREN':([19,20,21,22,23,24,25,27,31,32,33,35,49,50,54,55,63,64,65,66,67,68,69,70,71,72,77,84,90,],[-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,54,72,-37,-38,77,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,-39,-41,-40,]),'DO':([19,20,21,22,23,24,25,27,31,32,33,50,54,63,64,65,66,67,68,69,70,71,72,76,77,84,90,],[-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,-37,-38,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,86,-39,-41,-40,]),'COMMA':([19,20,21,22,23,24,25,27,31,32,33,50,54,59,61,63,64,65,66,67,68,69,70,71,72,77,84,87,88,90,91,],[-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,-37,-38,80,-17,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,-39,-41,-18,-16,-40,94,]),'RBRACE':([19,20,21,22,23,24,25,27,31,32,33,38,50,54,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,77,83,84,87,88,90,98,99,100,],[-20,-21,-22,-23,-24,-25,-26,-46,-43,-44,-45,-19,-37,-38,79,-14,-15,-17,-28,-29,-30,-31,-32,-33,-34,-35,-36,-27,-19,84,-39,90,-41,-18,-16,-40,-19,100,-42,]),'IN':([34,],[53,]),'COLON':([57,75,96,],[78,85,97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'script':([0,],[1,]),'statements':([0,39,82,86,],[2,62,89,92,]),'statement':([0,2,39,62,82,86,89,92,],[3,15,3,15,3,3,15,15,]),'let_statement':([0,2,39,62,82,86,89,92,],[4,4,4,4,4,4,4,4,]),'call_statement':([0,2,39,62,82,86,89,92,],[5,5,5,5,5,5,5,5,]),'if_statement':([0,2,39,62,82,86,89,92,],[6,6,6,6,6,6,6,6,]),'for_statement':([0,2,39,62,82,86,89,92,],[7,7,7,7,7,7,7,7,]),'function_call':([0,2,11,26,28,36,37,39,40,41,42,43,44,45,46,47,53,62,78,82,86,89,92,],[8,8,21,21,21,21,21,8,21,21,21,21,21,21,21,21,21,8,21,8,8,8,8,]),'expression':([11,26,28,36,37,40,41,42,43,44,45,46,47,53,78,],[18,49,50,55,56,63,64,65,66,67,68,69,70,76,87,]),'binary_op':([11,26,28,36,37,40,41,42,43,44,45,46,47,53,78,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'unary_op':([11,26,28,36,37,40,41,42,43,44,45,46,47,53,78,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'call_expression':([11,26,28,36,37,40,41,42,43,44,45,46,47,53,78,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'calc_expression':([11,26,28,36,37,40,41,42,43,44,45,46,47,53,78,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'literal':([11,26,28,36,37,40,41,42,43,44,45,46,47,53,78,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'variable':([11,26,28,36,37,40,41,42,43,44,45,46,47,53,78,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'arguments':([38,73,98,],[58,83,99,]),'argument_list':([38,73,98,],[59,59,59,]),'empty':([38,73,98,],[60,60,60,]),'argument':([38,73,80,98,],[61,61,88,61,]),'calc_args':([52,],[74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> script","S'",1,None,None,None),
  ('script -> statements','script',1,'p_script','parser.py',25),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',29),
  ('statements -> statement','statements',1,'p_statements','parser.py',30),
  ('statement -> let_statement','statement',1,'p_statement','parser.py',38),
  ('statement -> call_statement','statement',1,'p_statement','parser.py',39),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',40),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> function_call','statement',1,'p_statement','parser.py',42),
  ('let_statement -> LET ID ASSIGN expression','let_statement',4,'p_let_statement','parser.py',47),
  ('call_statement -> CALL ID LBRACE arguments RBRACE','call_statement',5,'p_call_statement','parser.py',52),
  ('if_statement -> IF expression THEN statements END','if_statement',5,'p_if_statement','parser.py',57),
  ('if_statement -> IF expression THEN statements ELSE statements END','if_statement',7,'p_if_statement','parser.py',58),
  ('for_statement -> FOR ID IN expression DO statements END','for_statement',7,'p_for_statement','parser.py',66),
  ('arguments -> argument_list','arguments',1,'p_arguments','parser.py',73),
  ('arguments -> empty','arguments',1,'p_arguments','parser.py',74),
  ('argument_list -> argument_list COMMA argument','argument_list',3,'p_argument_list','parser.py',78),
  ('argument_list -> argument','argument_list',1,'p_argument_list','parser.py',79),
  ('argument -> ID COLON expression','argument',3,'p_argument','parser.py',87),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',91),
  ('expression -> binary_op','expression',1,'p_expression','parser.py',98),
  ('expression -> unary_op','expression',1,'p_expression','parser.py',99),
  ('expression -> function_call','expression',1,'p_expression','parser.py',100),
  ('expression -> call_expression','expression',1,'p_expression','parser.py',101),
  ('expression -> calc_expression','expression',1,'p_expression','parser.py',102),
  ('expression -> literal','expression',1,'p_expression','parser.py',103),
  ('expression -> variable','expression',1,'p_expression','parser.py',104),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',105),
  ('binary_op -> expression EQ expression','binary_op',3,'p_binary_op','parser.py',113),
  ('binary_op -> expression NE expression','binary_op',3,'p_binary_op','parser.py',114),
  ('binary_op -> expression LT expression','binary_op',3,'p_binary_op','parser.py',115),
  ('binary_op -> expression LE expression','binary_op',3,'p_binary_op','parser.py',116),
  ('binary_op -> expression GT expression','binary_op',3,'p_binary_op','parser.py',117),
  ('binary_op -> expression GE expression','binary_op',3,'p_binary_op','parser.py',118),
  ('binary_op -> expression AND expression','binary_op',3,'p_binary_op','parser.py',119),
  ('binary_op -> expression OR expression','binary_op',3,'p_binary_op','parser.py',120),
  ('binary_op -> expression DOT ID','binary_op',3,'p_binary_op','parser.py',121),
  ('unary_op -> NOT expression','unary_op',2,'p_unary_op','parser.py',144),
  ('function_call -> NOW LPAREN RPAREN','function_call',3,'p_function_call','parser.py',149),
  ('function_call -> PRINT LPAREN expression RPAREN','function_call',4,'p_function_call','parser.py',150),
  ('call_expression -> CALL ID LBRACE arguments RBRACE','call_expression',5,'p_call_expression','parser.py',159),
  ('calc_expression -> CALC LBRACE calc_args RBRACE','calc_expression',4,'p_calc_expression','parser.py',164),
  ('calc_args -> ID COLON STRING COMMA ID COLON LBRACE arguments RBRACE','calc_args',9,'p_calc_args','parser.py',168),
  ('literal -> NUMBER','literal',1,'p_literal','parser.py',180),
  ('literal -> STRING','literal',1,'p_literal','parser.py',181),
  ('literal -> BOOLEAN','literal',1,'p_literal','parser.py',182),
  ('variable -> ID','variable',1,'p_variable','parser.py',188),
]
